{
  "codexModules": {
    "mobileFirstModals": {
      "title": "üì± Mobile-First Modals",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Enable rapid, context-aware task execution via modal windows optimized for mobile and desktop ‚Äî consistent across shop, office, and field."
      },
      "features": {
        "icon": "gear",
        "format": "list",
        "items": [
          "Adaptive modal forms that adjust per device and role",
          "AI-linked context insertion for prefilled fields",
          "Real-time triggers via SSE or One-Line Task",
          "Inline validation and AJAX/SSE submissions"
        ]
      },
      "integrations": {
        "icon": "plug",
        "format": "list",
        "items": [
          "One-Line Task Engine",
          "Real-Time SSE",
          "Core Database"
        ]
      }
    },
    "officeBulletins": {
      "title": "megaphone Office Bulletins",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Centralized announcements across departments, roles, and devices with priority, visibility controls, and expiration logic."
      },
      "bulletinTypes": {
        "icon": "clipboard",
        "format": "list",
        "items": [
          "Global",
          "Departmental",
          "Urgent",
          "Event-Based"
        ]
      },
      "features": {
        "icon": "gear",
        "format": "list",
        "items": [
          "Markdown formatting support",
          "Role/department filtering",
          "Read receipts and pinning",
          "Bulletin archive/history per user"
        ]
      },
      "integrations": {
        "icon": "plug",
        "format": "list",
        "items": [
          "Mobile-First Modals",
          "Time Interval Standards"
        ]
      }
    },
    "oneLineTask": {
      "title": "brain One-Line Task (OLT) Input",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Provide a natural language entry point that intelligently interprets user input and performs the most context-appropriate action ‚Äî database updates, task creation, record lookups, or communication triggers."
      },
      "mechanism": {
        "icon": "bolt",
        "format": "list",
        "items": [
          "Leverages the semanticResponder module for stream queries (time, date, weather, KPIs, announcements) instead of hardcoded keyword rules",
          "Regex rules reserved only for critical agentic actions (login/logout, CRUD triggers)",
          "Lightweight NLP scans for keywords, named entities, dates/times",
          "Intent detection maps prompts to known action templates (contact, permit, quote, task)"
        ]
      },
      "examples": {
        "icon": "lightbulb",
        "format": "list",
        "items": [
          "Jim Flanigan at ALC Group, 816-421-8335 ‚Üí ‚ûï Add new contact",
          "Schedule reinstall for Yogurtology next Wednesday at noon ‚Üí üìÖ Create task with date/time",
          "Sign permit follow-up, call Louie ‚Üí ‚òéÔ∏è Call task with reference note",
          "Start quote for 810 S 56th Ave, monument sign repair ‚Üí üìù Begin quote form with prefilled fields"
        ]
      },
      "integrations": {
        "icon": "plug",
        "format": "list",
        "items": [
          "Database Modules",
          "Time Interval Standards",
          "Permit Suite",
          "Attendance + Escalation Trees",
          "Semantic Responder"
        ]
      },
      "futureEnhancements": {
        "icon": "rocket",
        "format": "list",
        "items": [
          "Auto-tagging entities and locations",
          "Suggesting next steps (e.g., 'Would you like to notify the shop?')",
          "Backfill from prior activity threads to infer intent"
        ]
      },
      "strategicImportance": {
        "icon": "trophy",
        "format": "text",
        "text": "Removes barriers to entry and allows front office staff and sales reps to initiate actions without navigating deep menus ‚Äî accelerating workflows and boosting adoption across the organization."
      }
    },
    "permitManagementSuite": {
      "title": "folder Permit Management Suite",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Tracks sign permit lifecycle from request to approval, with SLA logic, smart routing, and real-time status updates."
      },
      "features": {
        "icon": "gear",
        "format": "list",
        "items": [
          "Submission logs and timestamps",
          "SLA timers with Time Standards",
          "Live SSE status changes",
          "Escalation logic if delayed",
          "AI-parsed jurisdiction assignment"
        ]
      },
      "workflow": {
        "icon": "clipboard",
        "format": "list",
        "items": [
          "Created",
          "Received",
          "Submitted",
          "Response Pending",
          "Approved/Denied"
        ]
      },
      "integrations": {
        "icon": "plug",
        "format": "list",
        "items": [
          "Core Database",
          "File Management",
          "Mobile-First Modals",
          "Attendance Suite",
          "Management Escalation Trees"
        ]
      }
    },
    "timeIntervalStandards": {
      "title": "clock Time Interval Standards (TIS)",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Defines workday types and time segments (e.g., Worktime) used across scheduling, SLAs, and validations."
      },
      "dayTypes": {
        "icon": "clipboard",
        "format": "list",
        "items": [
          "Workday",
          "Weekend",
          "Holiday"
        ]
      },
      "segments": {
        "icon": "clipboard",
        "format": "table",
        "office": {
          "before": "12:00 AM ‚Äì 7:29 AM",
          "worktime": "7:30 AM ‚Äì 3:30 PM",
          "after": "3:31 PM ‚Äì 11:59 PM"
        },
        "shop": {
          "before": "12:00 AM ‚Äì 5:59 AM",
          "worktime": "6:00 AM ‚Äì 2:00 PM",
          "after": "2:01 PM ‚Äì 11:59 PM"
        }
      },
      "exclusions": {
        "icon": "warning",
        "format": "text",
        "text": "Weekends and Holidays are excluded from time-sensitive calculations"
      },
      "integrations": {
        "icon": "plug",
        "format": "list",
        "items": [
          "Permit Suite",
          "Orders",
          "Attendance",
          "SSE Monitoring",
          "Escalation Rules"
        ]
      }
    },
    "financialControlSuite": {
      "title": "briefcase Financial Control Suite",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Track, validate, and approve all financial activities related to sign projects ‚Äî enforce budget integrity, reduce waste, and ensure traceability."
      },
      "components": {
        "icon": "puzzle",
        "format": "list",
        "items": [
          "Job Costing Tracker (labor, materials, subs)",
          "PO System with thresholds and approvals",
          "Client Billing Module (deposits, payments, credit memos)",
          "Reimbursement Log synced with attendance"
        ]
      },
      "workflow": {
        "icon": "clipboard",
        "format": "list",
        "items": [
          "Project initiated",
          "Budget auto-generated based on order type",
          "Expenses logged via PO or reimbursement",
          "Client billed according to progress",
          "Flag overages and escalate via MET"
        ]
      },
      "dashboards": {
        "icon": "barChart",
        "format": "list",
        "items": [
          "Budget vs Actual per project",
          "Cash flow forecast vs actual",
          "Reimbursable vs absorbed expenses",
          "Monthly financial summaries"
        ]
      },
      "controls": {
        "icon": "shield",
        "format": "list",
        "items": [
          "Role-based approvals",
          "Spending hard stops unless overridden",
          "Alerts for late billing or PO"
        ]
      },
      "integrations": {
        "icon": "plug",
        "format": "list",
        "items": [
          "Core Database",
          "Attendance Suite",
          "Service Suite",
          "Time Interval Standards"
        ]
      }
    },
    "serviceManagementSuite": {
      "title": "tools Service Management Suite",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Handles service orders, maintenance requests, and support dispatches across field, office, and client interfaces."
      },
      "features": {
        "icon": "gear",
        "format": "list",
        "items": [
          "Track service requests by type (repair, install, warranty)",
          "Assign and schedule field teams",
          "Log outcomes, photos, and signatures",
          "Integrate with order history and permit status"
        ]
      }
    },
    "glossaryModule": {
      "title": "bookBlue Skyesoft Codex Glossary",
      "purpose": {
        "icon": "target",
        "format": "text",
        "text": "Provides a living reference of key terms, acronyms, and internal shorthand for consistent communication across AI, users, and workflows."
      },
      "contents": {
        "icon": "bookOpen",
        "format": "table",
        "items": [
          { "term": "LGBAS", "definition": "Let‚Äôs Go Back A Step: A reflective tool to pause and reassess logic or flow." },
          { "term": "MTCO", "definition": "Measure Twice, Cut Once: A guiding principle to encourage pre-action validation." },
          { "term": "Codex Context", "definition": "Memory schema loaded by the AI to operate with Skyesoft-specific logic." },
          { "term": "Codex App", "definition": "Modular UI tool for managing and accessing structured documentation." }
        ]
      },
      "integration": {
        "icon": "plug",
        "format": "list",
        "items": [
          "AI Prompt Normalization",
          "Structured Chat Interpretation",
          "Codex-based Response Justification"
        ]
      }
    }
  },
  "skyesoftConstitution": {
    "title": "scroll Skyesoft Constitution",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "Defines Skyebot‚Äôs constitutional framework and behavioral rules for interacting with humans and data."
    },
    "sourcesOfTruth": {
      "icon": "books",
      "format": "list",
      "items": [
        "SSE Stream (dynamic operational context)",
        "skyesoft-data.json (structured history + contact/entity DB)",
        "codex.json (static knowledge + specs)",
        "saveChatLog.php (chat memory archive)"
      ]
    },
    "aiBehavior": {
      "icon": "ruler",
      "format": "list",
      "items": [
        "Do not claim to lack real-time access ‚Äî refer to SSE.",
        "Always normalize names and phone formats before inserting contacts.",
        "Use codex tags and glossary to answer specialized questions.",
        "Infer user meaning from context (not hardcoded logic)."
      ]
    },
    "documentation": {
      "icon": "bookBlue",
      "format": "text",
      "text": "Information Sheets are constitutional documents used for development and transparency. They allow Skyebot to generate structured summaries of the Codex itself, ensuring that both developers and users can understand the system‚Äôs mission, standards, and modules."
    }
  },
  "informationSheets": {
    "title": "bookBlue Information Sheet Suite",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "Produce internal knowledge documents that summarize Codex modules, standards, and rules. These sheets guide developers and AI in aligning with the Skyesoft Constitution and explaining it to users."
    },
    "useCases": {
      "icon": "lightbulb",
      "format": "list",
      "items": [
        "Developer references for module specifications",
        "AI explanations of Codex content to users",
        "Validation of workflows against constitutional standards"
      ]
    },
    "rules": {
      "icon": "ruler",
      "format": "list",
      "items": [
        "Each page body must begin with a section header.",
        "If content continues onto a new page, the section header is repeated with '‚Äì Continued' appended."
      ]
    }
  },
  "documentStandards": {
    "title": "pencil Document Formatting Standards",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "Define page structure, styling, and metadata rules for all generated Information Sheets and reports."
    },
    "pageStructure": {
      "icon": "document",
      "format": "list",
      "items": [
        "Header",
        "Body",
        "Footer"
      ]
    },
    "headers": {
      "icon": "arrowUp",
      "format": "list",
      "items": [
        "Must include document title",
        "Must include Christy Signs logo and Skyesoft identifier",
        "May also include project name, module name, or date"
      ]
    },
    "footers": {
      "icon": "arrowDown",
      "format": "list",
      "items": [
        "Must include page numbering (Page X of Y)",
        "Must include Christy Signs footer with contact information",
        "Must include copyright line: ¬© Christy Signs / Skyesoft, All Rights Reserved",
        "Must display disclaimers where provided"
      ]
    },
    "styling": {
      "icon": "palette",
      "format": "list",
      "items": [
        "Use consistent fonts, margins, and spacing across all documents",
        "Apply Christy Signs branding colors (e.g., Pantone #637C blue)"
      ]
    },
    "metadata": {
      "icon": "receipt",
      "format": "list",
      "items": [
        "Must include document timestamp (UTC + local)",
        "Must include author or system identifier (Skyebot)",
        "Must include document version number"
      ]
    }
  },
  "ragFramework": {
    "title": "Retrieval-Augmented Generation (RAG)",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "Skyebot uses RAG to blend user prompts with real-time and historical data. Context from the SSE stream, skyesoft-data.json, codex.json, and saved chats are dynamically retrieved and included with each AI query. This ensures that responses are accurate, up-to-date, and policy-aware."
    },
    "sources": {
      "icon": "clipboard",
      "format": "list",
      "items": [
        "SSE Stream (dynamic operational context)",
        "skyesoft-data.json (structured history + contact/entity DB)",
        "codex.json (static knowledge + specs)",
        "saveChatLog.php (chat memory archive)"
      ]
    }
  },
  "sharedReferences": {
    "title": "link Shared References",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "Reference pointer to constitution.sourcesOfTruth and constitution.aiBehavior.rules. The Constitution remains the authoritative SOT."
    }
  },
  "skyesoftGlossary": {
    "title": "bookBlue Skyesoft Glossary",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "This root-level glossary provides quick reference for AI responses. The glossaryModule in modules is the canonical, version-controlled dictionary for developers."
    },
    "entries": {
      "icon": "bookOpen",
      "format": "table",
      "items": [
        { "term": "MTCO", "definition": "Measure Twice, Cut Once: A guiding principle to encourage pre-action validation." },
        { "term": "LGBAS", "definition": "Let‚Äôs Go Back A Step: Tool to pause and reassess logic or flow." },
        { "term": "SSE", "definition": "Server-Sent Events: Streaming real-time data from server to browser (used in Skyesoft for live context)." },
        { "term": "KPI", "definition": "Key Performance Indicator: A metric for tracking progress against goals." },
        { "term": "Codex", "definition": "Skyesoft's central knowledge base, used by AI for definitions, rules, and workflows." }
      ]
    }
  },
  "codexMeta": {
    "title": "Skyesoft Codex",
    "version": "2025.09",
    "lastUpdated": "2025-09-17",
    "purpose": {
      "icon": "target",
      "format": "text",
      "text": "All-in-one source of truth for Skyebot and the Skyesoft platform."
    },
    "schema": {
      "requiredKeys": [
        "title",
        "purpose"
      ],
      "optionalKeys": [
        "description",
        "features",
        "workflow",
        "integrations",
        "rules",
        "examples",
        "format"
      ],
      "fieldTypes": {
        "title": "String with emoji prefix",
        "purpose": "Object {icon, text}",
        "description": "Object {icon, text}",
        "features": "Object {icon, items[]}",
        "workflow": "Object {icon, items[]}",
        "integrations": "Object {icon, items[]}",
        "rules": "Object {icon, items[]}",
        "examples": "Object {icon, items[]}",
        "format": "String: 'text', 'list', or 'table'"
      },
      "notes": "Every module must begin with 'title' + 'purpose'. Other keys may appear as needed. Each section must include an 'icon'. The 'format' tag is optional and tells the renderer how to display structured data: 'text' for plain paragraphs, 'list' for bullet points, and 'table' for structured rows/columns."
    }
  }
}